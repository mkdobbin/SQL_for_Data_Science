Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:

code
select count(*) as number_of_records
from Attribute

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.
select distinct column1
from table

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493
vii. Photo = 10000
viii. Tip = 537
ix. User = 10000
x. Friend = 11
xi. Elite_years = 2780


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No

	SQL code used to arrive at answer: Ran code for each column.
	select *
	from user
	where column is null


4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

select min(Stars), max(stars), avg(stars)
from Review

	i. Table: Review, Column: Stars

		min:	1	max:	5	avg:3.7082


	ii. Table: Business, Column: Stars

		min:1		max:5		avg:3.6549


	iii. Table: Tip, Column: Likes

		min: 0		max: 2		avg: 0.0144


	iv. Table: Checkin, Column: Count

		min:1	max: 53		avg:1.9414


	v. Table: User, Column: Review_count

		min: 0		max: 2000		avg: 24.2995



5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	select city,
	count(review_count) as reviews
	from business
	group by city
	order by reviews DESC

	Copy and Paste the Result Below:
	city            | reviews |
+-----------------+---------+
| Las Vegas       |    1561 |
| Phoenix         |    1001 |
| Toronto         |     985



6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:
select stars,
review_count
from business
where city = 'Avon'
order by stars asc

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
-------+--------------+
| stars | review_count |
+-------+--------------+
|   1.5 |           10 |
|   2.5 |            3 |
|   2.5 |            3 |
|   3.5 |            7 |
|   3.5 |           31 |
|   3.5 |           50 |
|   4.0 |            4 |
|   4.0 |           17 |
|   4.5 |           31 |
|   5.0 |            3 |
+-------+--------------

ii. Beachwood

SQL code used to arrive at answer:
select stars,
review_count
from business
where city = 'Beachwood'
order by stars asc

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
stars | review_count |
+-------+--------------+
|   2.0 |            8 |
|   2.5 |            3 |
|   3.0 |            8 |
|   3.0 |            3 |
|   3.5 |            3 |
|   3.5 |            3 |
|   4.0 |           69 |
|   4.5 |           14 |
|   4.5 |            3 |
|   5.0 |            6 |
|   5.0 |            4 |
|   5.0 |            6 |
|   5.0 |            3 |
|   5.0 |            4 |


7. Find the top 3 users based on their total number of reviews:

	SQL code used to arrive at answer:
	select name,
	review_count
	from user
	order by review_count desc

	Copy and Paste the Result Below:

	name      | review_count |
 +-----------+--------------+
 | Gerald    |         2000 |
 | Sara      |         1629 |
 | Yuri      |         1339

8. Does posing more reviews correlate with more fans?
	No. Review_count and number of fans do not appear to be correlated.

	Please explain your findings and interpretation of the results:
	select name, review_count, fans
	from user
	order by review_count desc

	name      | review_count | fans |
	+-----------+--------------+------+
	| Gerald    |         2000 |  253 |
	| Sara      |         1629 |   50 |
	| Yuri      |         1339 |   76 |
	| .Hon      |         1246 |  101 |
	| William   |         1215 |  126 |
	| Harald    |         1153 |  311 |
	| eric      |         1116 |   16 |
	| Roanna    |         1039 |  104 |
	| Mimi      |          968 |  497


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Love
	love: 1780
	hate: 232


	SQL code used to arrive at answer:
select count(text) as love
from review
where text like '%love%'



10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	select name, fans
	from user
	order by fans desc

	Copy and Paste the Result Below:
	name      | fans |
 +-----------+------+
 | Amy       |  503 |
 | Mimi      |  497 |
 | Harald    |  311 |
 | Gerald    |  253 |
 | Christine |  173 |
 | Lisa      |  159 |
 | Cat       |  133 |
 | William   |  126 |
 | Fran      |  124 |
 | Lissa     |  120



Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

i. Do the two groups you chose to analyze have a different distribution of hours?
Yes. It appears restaurants with lower stars are open for longer hours.

ii. Do the two groups you chose to analyze have a different number of reviews?
Restaurants in the 4-5 star group had more reviews.


iii. Are you able to infer anything from the location data provided between these two groups? Explain.

SQL code used for analysis:
select b.city, b.stars, b.review_count, c.category, h.hours,
CASE
	WHEN h.hours LIKE "%Monday%" THEN 1
	WHEN h.hours LIKE "%Tuesday%" THEN 2
	WHEN h.hours LIKE "%Wednesday%" THEN 3
	WHEN h.hours LIKE "%Thursday%" THEN 4
	WHEN h.hours LIKE "%Friday%" THEN 5
	WHEN h.hours LIKE "%Saturday%" THEN 6
	WHEN h.hours LIKE "%Sunday%" THEN 7
END AS hour_bins,
CASE
	WHEN b.stars BETWEEN 2 AND 3 THEN '2-3 stars'
	WHEN b.stars BETWEEN 4 AND 5 THEN '4-5 stars'
END AS star_bins
from business b
left join category c on c.business_id = b.id
left join hours h on h.business_id =  b.id
where city = 'Toronto' and category = 'Restaurants' and
(b.stars BETWEEN 2 AND 3 or b.stars BETWEEN 4 AND 5)
group by star_bins, hour_bins
order by stars desc

2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.

i. Difference 1:
The average star rating was fairly similiar between open and closed businesses. Open: 3.679, Closed: 3.520

ii. Difference 2:
The review count for open restaurants is much larger than closed restaurants. Open: 269300, Closed: 35261

SQL code used for analysis:
select COUNT(Distinct(ID)),
AVG(review_count),
SUM(review_count),
AVG(stars),
is_open
from business
group by is_open


3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:

i. Indicate the type of analysis you chose to do:
Time series and sentiment analysis

ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:
The query output contains review stars, date and review text as well if the buisness is open or closed. It would be interesting
to investigate further using a time series and sentiment analysis if a series of poor reviews over a certain time period led to
a closure of the business.

iii. Output of your finished dataset:
Output with review text is to large to output.


iv. Provide the SQL code you used to create your final dataset:
select r.business_id,
r.stars,
r.date,
r.text,
b.is_open
from business b
inner join review r on r.business_id = b.id
